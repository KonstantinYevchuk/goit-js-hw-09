{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEhCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IAoBP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGxE,SAASc,EAAQL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3BU,EAAApB,GAASqB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CApBrER,EAAOwB,iBAAiB,UAExB,SAAkBC,GAChBA,EAAIC,iBAMF,IAJF,IAAMC,EAAaC,OAAOzB,EAAW0B,OAC/BC,EAAOF,OAAOxB,EAAUyB,OACxBE,EAASH,OAAOvB,EAAYwB,OAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAE,CAElC1B,EAAc0B,EADIL,EAAaG,GAAQE,EAAI,IACfC,KAAKjB,GAAWkB,MAAMZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\")\n\nconst inputDelay = document.querySelector(\"input[name='delay']\");\nconst inputStep = document.querySelector(\"input[name='step']\");\nconst inputAmount = document.querySelector(\"input[name='amount']\");\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  })\n  \n}\n\nformEl.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault()\n  \n  const firstDelay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n    \n    for (let i = 1; i <= amount; i += 1){\n      const delayStep = firstDelay + step * (i - 1);\n      createPromise(i, delayStep).then(onSuccess).catch(onError)\n    };\n}\n\nfunction onSuccess({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\n\n\n\n\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","evt","preventDefault","firstDelay","Number","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.7445b72e.js.map"}